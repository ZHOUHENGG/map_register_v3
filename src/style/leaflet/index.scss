@use "sass:math" as math;

.genshin-map-container {
  --bg-color: rgba(41 37 36 / 0.7);
  --border-color: #AA9172;

  .genshin-map {
    cursor: crosshair;
    --arrow-size: 20px;

    .leaflet-popup {
      background: none;
      border-radius: 8px;
      filter: drop-shadow(0 0 0.5rem #00000080);
      backdrop-filter: blur(10px);
      &.no-arrow .leaflet-popup-tip-container {
        display: none;
      }
    }

    .leaflet-popup-content-wrapper {
      background: var(--bg-color);
      padding: 8px;
      border: 1px solid var(--border-color);
      box-shadow: none;
      overflow: hidden;
    }

    .leaflet-popup-tip-container {
      .leaflet-popup-tip {
        border: 1px solid var(--border-color);
        margin: -8px auto 0;
        background: rgba(41 37 36);
      }
    }

    .leaflet-popup-content {
      margin: 0;
      color: #FFF;
    }
  }
}

@mixin calculateClipPath($Ro: 24, $Ri: 20, $size: 56) {
  $center: math.div($size, 2);
  $Ro2: math.pow($Ro, 2);
  $Ro3: math.pow($Ro, 3);
  $Ro4: math.pow($Ro, 4);
  $Ri2: math.pow($Ri, 2);
  $Ri3: math.pow($Ri, 3);
  $Ri4: math.pow($Ri, 4);
  $Ri5: math.pow($Ri, 5);
  $Rd: math.sqrt($Ro2 - $Ri2);

  $x: math.div(8 * $Ri5 + 12 * $Ri3 * $Ro2 + 4 * $Ri4 * $Rd - $Ro4 * $Rd, 20 * $Ri4 + 4 * $Ri2 * $Ro2 + $Ro4);
  $y: math.div($Ri * (4 * $Ri4 + 8 * $Ri2 * $Ro2 + 3 * $Ro4 - 8 * $Ri3 * $Rd + 4 * $Ri * $Ro2 * $Rd) ,20 * $Ri4 + 4 * $Ri2 * $Ro2 + $Ro4);

  clip-path: path('\
    M #{$center + $Ri} #{$center}\
    A #{$Ri} #{$Ri} 0 1 0 #{$center + $Ri} #{$center + 0.01}\
    M #{$center + $x}  #{$center - $y}\
    A #{$Ro} #{$Ro} 0 0 1 #{$center+$x} #{$center + $y}\
    L #{$center + $Ri} #{$center + $Ri}\
    L #{$center + $y}  #{$center + $x}\
    A #{$Ro} #{$Ro} 0 0 1 #{$center - $y} #{$center + $x}\
    L #{$center - $Ri} #{$center + $Ri}\
    L #{$center - $x}  #{$center + $y}\
    A #{$Ro} #{$Ro} 0 0 1 #{$center - $x} #{$center - $y}\
    L #{$center - $Ri} #{$center - $Ri}\
    L #{$center - $y}  #{$center - $x}\
    A #{$Ro} #{$Ro} 0 0 1 #{$center + $y} #{$center - $x}\
    L #{$center + $Ri} #{$center - $Ri}\
    L #{$center + $x}  #{$center - $y}\
    Z'
  );
}

// 点位激活时的光标效果
.genshin-active-marker {
  --bw-p: 2px;
  --bw-n: calc(0px - var(--bw-p));
  --bw-color: rgb(100 100 100 / 0.2);
  @keyframes scaleFadeIn {
    0% {
      scale: 1;
      opacity: 0.8;
    }
    50% {
      scale: 0.9;
      opacity: 1;
    }
    100% {
      scale: 1;
      opacity: 0.8;
    }
  }
  filter:
    drop-shadow(0 var(--bw-p) 0 var(--bw-color))
    drop-shadow(0 var(--bw-n) 0 var(--bw-color))
    drop-shadow(var(--bw-p) 0 0 var(--bw-color))
    drop-shadow(var(--bw-n) 0 0 var(--bw-color));
  &::before {
    content: '';
    background: #FFF;
    width: 100%;
    height: 100%;
    position: absolute;
    animation: scaleFadeIn forwards;
    animation-duration: 100ms;
    @include calculateClipPath(25, 21, 70);
  }
}

// 标签标记
.genshin-text-marker {
  @keyframes fadeOut {
    from {
      opacity: 1;
    }
    to {
      opacity: 0;
    }
  }
  @keyframes fadeIn {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  opacity: 0;
  animation: fadeIn forwards;
  animation-duration: 400ms;
  &.visible-fade {
    animation: fadeOut forwards;
    animation-duration: 400ms;
  }
}
